# create s3 bucket
---
- name: List bucket
  s3: bucket={{bucket_name}} mode=list
  ignore_errors: true
  register: listed

- name: Delete Bucket if exists
  # Delete a bucket and all contents
  s3: bucket={{bucket_name}} mode=delete
  when: listed|success
  tags:
    - clean

- name: Launch an ec2 instance
  ec2:
    key_name: "{{key_pair}}"
    instance_type: "{{instance_type}}"
    image: "{{ image }}"
    region: "{{ region }}"
    wait: yes
    count: 1
    volumes:
      - device_name: /dev/xvda
        volume_type: gp2
        volume_size: 10
    instance_tags:
      db: postgres
  register: ec2
  tags:
    - launch_instance
#
# create image from the instance

- name: Create Image from the launched Instance
  ec2_ami:
    instance_id: "{{ ec2.instance_ids[0] }}"
    wait: yes
    region: "{{ region }}"
    name: thomas-nyambati-image
    tags:
      service: database
  register: image
  tags:
    - create_image


- name: Terminate instances that were previously launched
  ec2:
    state: absent
    region: "{{region}}"
    instance_ids: "{{ ec2.instance_ids }}"
  tags:
    - terminate_instance

- name: Compile template to json.
  local_action: template src={{ template_dir }}/cloudformation-vpc-template.json.j2 dest={{ template_dir }}/cloudformation-vpc-template.json

- name: Launch CloudFormation
  cloudformation:
    stack_name: "{{stack_name}}"
    state: present
    region: "{{region}}"
    disable_rollback: true
    template:  "{{ template_dir }}/cloudformation-vpc-template.json"
    tags:
      Stack: "{{stack_name}}"
  tags:
    - cloudformation
  register: vpc

- name: Clean up the local, generated, file
  file:
    name: "{{ template_dir }}/cloudformation-vpc-template.json"
    state: absent

- name: Deregister the ami
  ec2_ami:
    region: " {{ region }}"
    image_id: "{{ instance.image_id }}"
    delete_snapshot: True
    state: absent
  tags:
    - deregister_ami

- name: Upload static html page to the bucket
  s3:
    bucket: "{{bucket_name}}"
    object: index.html
    src: /s3/index.html
    encrypt: true
    permission: public-read
    mode: put
  tags:
    - site-upload
